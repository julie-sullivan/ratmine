# acceptance tests for RatMine

assert {
	sql: select count(*) = 3 from organism
	note: there are only 3 organisms in RatMine
}

assert {
	sql: select count(*) >= 39586 from gene
}

no-results {
	sql: select gene1.primaryidentifier, gene1.id, gene2.primaryidentifier, gene2.id from gene as gene1, gene as gene2 where gene1.primaryidentifier = gene2.primaryidentifier and gene1.id <> gene2.id
	note: no two genes should have the same identifier
}

no-results {
        sql: select g.primaryidentifier, g.id, g.symbol from gene g where g.sequenceontologytermid is null
        note: no genes should have the null sequence ontology term
}


no-results {
	sql: select * from organism where genus is null or species is null or shortname is null or name is null or taxonid is null
	note: all fields of an organism should be filled in
}

no-results {
	sql: select * from gene where primaryidentifier is null
	note: no gene record should have a null primary identifier
}

no-results {
	sql: select * from gene where primaryidentifier is not null and symbol is null
	note: ensure gene objects are being integreated correctly
}

no-results {
	sql: select g1.ncbigenenumber, g1.id, g2.ncbigenenumber, g2.id from gene as g1, gene as g2 where g1.id <> g2.id and g1.ncbigenenumber = g2.ncbigenenumber
	note: no two genes should have the same NCBI Gene Number
}

no-results {
	sql: select p1.primaryaccession, p1.id, p2.primaryaccession, p2.id from protein as p1, protein as p2 where p1.primaryaccession = p2.primaryaccession and p1.id <> p2.id
	note: no two proteins should have the same accession
}

no-results {
	sql: select * from gene g where g.primaryidentifier not like 'RGD:%'
	note: all genes primaryIdentifiers should start with "RGD:"
}

no-results {
	sql: select * from qtl q where q.primaryidentifier not like 'RGD:%'
	note: all QTL primaryIdentifiers should start with "RGD:"
}

