# Bag upload queries
precompute.query.1 = SELECT a1_.id as a3_, a2_.value as a4_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_ WHERE a1_.synonyms CONTAINS a2_ 

precompute.query.3 = SELECT a1_.id AS a3_, a2_.value AS a4_, a5_.shortName as a6_ FROM org.intermine.model.bio.BioEntity AS a1_, org.intermine.model.bio.Synonym AS a2_, org.intermine.model.bio.Organism AS a5_ WHERE (a1_.synonyms CONTAINS a2_ AND a1_.organism CONTAINS a5_)

# gene/protein --> organism [used by some widgets]
precompute.query.5 = SELECT a1_.id as a3_, a2_.name AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_

precompute.query.6 = SELECT a1_.id AS a3_, a2_.name AS a4_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE a1_.organism CONTAINS a2_

# chromosome distribution widget
precompute.query.7 = SELECT a2_.id as a4_, a1_.primaryIdentifier AS a5_, a2_.primaryIdentifier AS a6_,  a3_.name as a7_ FROM org.intermine.model.bio.Chromosome AS a1_, org.intermine.model.bio.SequenceFeature AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE (a2_.chromosome CONTAINS a1_ AND a2_.organism CONTAINS a3_)

# GO enrichment queries
precompute.query.23 = SELECT a1_.id AS a3_, a2_.id AS a4_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Organism AS a2_ WHERE (a1_.organism CONTAINS a2_)

# GO stats widget
precompute.query.28 = SELECT DISTINCT a4_.namespace AS a7_, a3_.taxonId AS a8_, a1_.id AS a9_, a4_.identifier AS a10_, a4_.name AS a11_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.GOAnnotation AS a2_, org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.OntologyTerm AS a4_, org.intermine.model.bio.OntologyTerm AS a5_, org.intermine.model.bio.OntologyRelation AS a6_ WHERE a1_.goAnnotation CONTAINS a2_ AND LOWER(a4_.identifier) != 'go:0008150' AND LOWER(a4_.identifier) != 'go:0003674' AND LOWER(a4_.identifier) != 'go:0005575' AND a2_.ontologyTerm CONTAINS a5_ AND a5_.relations CONTAINS a6_ AND a6_.parentTerm CONTAINS a4_ AND a6_.childTerm CONTAINS a5_ AND a2_.qualifier IS NULL AND a1_.organism CONTAINS a3_

# genomic region search
precompute.query.30 = SELECT a3_.shortName AS a1_, a4_.class AS a2_ FROM org.intermine.model.bio.Organism AS a3_, org.intermine.model.bio.SequenceFeature AS a4_ WHERE a4_.organism CONTAINS a3_

precompute.query.31 = SELECT a4_.class AS a1_, a5_.name AS a2_, a5_.description AS a3_ FROM org.intermine.model.bio.SequenceFeature AS a4_, org.intermine.model.bio.SOTerm AS a5_ WHERE a4_.sequenceOntologyTerm CONTAINS a5_

# uniprot keyword widget
precompute.query.24 = SELECT a1_.id as a5_, a4_.name AS a6_, a2_.name as a7_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.Ontology AS a3_, org.intermine.model.bio.OntologyTerm AS a4_ WHERE (a1_.organism CONTAINS a2_ AND a1_.keywords CONTAINS a4_ AND a4_.ontology CONTAINS a3_ AND a3_.name = 'UniProtKeyword')

# uniprot features widget
precompute.query.25 = SELECT a1_.id AS a4_, LOWER(a2_.name) AS a5_, a3_.type AS a6_ FROM org.intermine.model.bio.Protein AS a1_, org.intermine.model.bio.Organism AS a2_, org.intermine.model.bio.UniProtFeature AS a3_ WHERE a1_.organism CONTAINS a2_ AND a1_.features CONTAINS a3_

# Publications widget
precompute.query.18 = SELECT a1_.id as a6_, a2_.pubMedId AS a4_, a2_.title AS a5_, a3_.name as a7_ FROM org.intermine.model.bio.Gene AS a1_, org.intermine.model.bio.Publication AS a2_, org.intermine.model.bio.Organism AS a3_ WHERE (a1_.organism CONTAINS a3_ AND a1_.publications CONTAINS a2_)


